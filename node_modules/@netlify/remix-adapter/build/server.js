"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createRequestHandler = void 0;
const node_1 = require("@remix-run/node");
function createRequestHandler({ build, mode, getLoadContext, }) {
    const remixHandler = (0, node_1.createRequestHandler)(build, mode);
    return async (request, context) => {
        const start = Date.now();
        console.log(`[${request.method}] ${request.url}`);
        try {
            const loadContext = (await (getLoadContext === null || getLoadContext === void 0 ? void 0 : getLoadContext(request, context))) || context;
            const response = await remixHandler(request, loadContext);
            // A useful header for debugging
            response.headers.set('x-nf-runtime', 'Node');
            console.log(`[${response.status}] ${request.url} (${Date.now() - start}ms)`);
            return response;
        }
        catch (error) {
            console.error(error);
            return new Response('Internal Error', { status: 500 });
        }
    };
}
exports.createRequestHandler = createRequestHandler;
