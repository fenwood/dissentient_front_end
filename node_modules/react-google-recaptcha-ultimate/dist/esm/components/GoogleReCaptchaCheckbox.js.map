{"version":3,"file":"GoogleReCaptchaCheckbox.js","sources":["../../../src/components/GoogleReCaptchaCheckbox.tsx"],"sourcesContent":["import type { ComponentProps } from 'react';\r\nimport React from 'react';\r\n\r\nimport { useGoogleReCaptcha } from '../context/useGoogleReCaptcha';\r\nimport type { ContainerId, GoogleReCaptcha } from '../utils';\r\nimport { removeGoogleReCaptchaContainer, useIsomorphicLayoutEffect } from '../utils';\r\n\r\nexport interface GoogleReCaptchaCheckboxProps extends Omit<ComponentProps<'div'>, 'onChange'> {\r\n  id?: string;\r\n  action?: string;\r\n  className?: string;\r\n  container?: ContainerId | HTMLElement;\r\n  callback?: (token: string) => void;\r\n  errorCallback?: () => void;\r\n  expiredCallback?: () => void;\r\n  language?: GoogleReCaptcha.Language;\r\n  theme?: GoogleReCaptcha.Theme;\r\n  size?: GoogleReCaptcha.Size['v2-checkbox'];\r\n  onChange?: (token: string) => void;\r\n}\r\n\r\nconst CHECKBOX_CONTAINER_ID = 'google-recaptcha-checkbox-container';\r\n\r\nexport const GoogleReCaptchaCheckbox: React.FC<GoogleReCaptchaCheckboxProps> = ({\r\n  id = CHECKBOX_CONTAINER_ID,\r\n  onChange,\r\n  action,\r\n  language,\r\n  ...props\r\n}) => {\r\n  const { siteKey, render, language: hl } = useGoogleReCaptcha();\r\n  const googleReCaptchaCheckboxContainerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (!render) return;\r\n    const checkbox = document.createElement('div');\r\n\r\n    const params = {\r\n      sitekey: siteKey,\r\n      callback: onChange,\r\n      ...((language ?? hl) && { hl: language ?? hl }),\r\n      ...props\r\n    } satisfies GoogleReCaptcha.Parameters;\r\n\r\n    if (action) {\r\n      render(checkbox, { ...params, action });\r\n    } else render(checkbox, params);\r\n\r\n    if (googleReCaptchaCheckboxContainerRef.current) {\r\n      googleReCaptchaCheckboxContainerRef.current.appendChild(checkbox);\r\n    }\r\n\r\n    return () => {\r\n      removeGoogleReCaptchaContainer(id);\r\n    };\r\n  }, [render, language, onChange, id, siteKey, props.size, action, props.theme]);\r\n\r\n  return <div id={id} ref={googleReCaptchaCheckboxContainerRef} {...props} />;\r\n};\r\n\r\nexport default GoogleReCaptchaCheckbox;\r\n"],"names":["GoogleReCaptchaCheckbox","_ref","_ref$id","id","CHECKBOX_CONTAINER_ID","onChange","action","language","props","_objectWithoutProperties","_excluded","_useGoogleReCaptcha","useGoogleReCaptcha","siteKey","render","hl","googleReCaptchaCheckboxContainerRef","React","useRef","useIsomorphicLayoutEffect","checkbox","document","createElement","params","_objectSpread","sitekey","callback","current","appendChild","removeGoogleReCaptchaContainer","size","theme","_extends","ref"],"mappings":";sbAuBaA,EAAkE,SAAHC,GAMtE,IAAAC,EAAAD,EALJE,GAAAA,OAAKC,IAAHF,EAH0B,sCAGFA,EAC1BG,EAAQJ,EAARI,SACAC,EAAML,EAANK,OACAC,EAAQN,EAARM,SACGC,EAAKC,EAAAR,EAAAS,GAERC,EAA0CC,IAAlCC,EAAOF,EAAPE,QAASC,EAAMH,EAANG,OAAkBC,EAAEJ,EAAZJ,SACnBS,EAAsCC,EAAMC,OAAuB,MA0BzE,OAxBAC,GAA0B,WACxB,GAAKL,EAAL,CACA,IAAMM,EAAWC,SAASC,cAAc,OAElCC,EAAMC,EAAAA,EAAA,CACVC,QAASZ,EACTa,SAAUrB,IACLE,QAAAA,EAAYQ,IAAO,CAAEA,GAAIR,QAAAA,EAAYQ,IACvCP,GAWL,OAPEM,EAAOM,EADLd,EACakB,EAAAA,KAAOD,GAAM,GAAA,CAAEjB,OAAAA,IACRiB,GAEpBP,EAAoCW,SACtCX,EAAoCW,QAAQC,YAAYR,GAGnD,WACLS,EAA+B1B,GAnBpB,CAqBd,GAAE,CAACW,EAAQP,EAAUF,EAAUF,EAAIU,EAASL,EAAMsB,KAAMxB,EAAQE,EAAMuB,QAEhEd,EAAAK,cAAA,MAAAU,EAAA,CAAK7B,GAAIA,EAAI8B,IAAKjB,GAAyCR,GACpE"}