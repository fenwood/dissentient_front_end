{"version":3,"file":"GoogleReCaptchaProvider.js","sources":["../../../src/context/GoogleReCaptchaProvider.tsx"],"sourcesContent":["import React from 'react';\n\nimport type { ContainerId, GoogleReCaptcha } from '../utils';\nimport {\n  checkGoogleReCaptchaInjected,\n  hideGoogleReCaptchaBadge,\n  injectGoogleReCaptchaScript,\n  removeGoogleReCaptchaBadge,\n  removeGoogleReCaptchaContainer,\n  removeGoogleReCaptchaScript\n} from '../utils';\n\nimport { GoogleReCaptchaContextProvider } from './GoogleReCaptchaContext';\n\ninterface GoogleReCaptchaDefaultProviderProps {\n  siteKey: string;\n  language?: string;\n  isEnterprise?: boolean;\n  onLoad?: (googleReCaptcha: GoogleReCaptcha.Instance) => Promise<void> | void;\n  onError?: () => Promise<void>;\n  host?: GoogleReCaptcha.Host;\n  children?: React.ReactNode;\n  scriptProps?: GoogleReCaptcha.Script;\n}\n\ninterface Explicit {\n  container?: ContainerId | HTMLElement;\n  tabIndex?: number;\n  inherit?: boolean;\n  callback?: (token: string) => void;\n  errorCallback?: () => void;\n  expiredCallback?: () => void;\n}\n\nexport interface GoogleReCaptchaV2InvisibleProviderProps\n  extends GoogleReCaptchaDefaultProviderProps {\n  type: Extract<GoogleReCaptcha.Type, 'v2-invisible'>;\n  explicit?: Explicit & {\n    badge?: GoogleReCaptcha.Badge;\n  };\n}\nexport interface GoogleReCaptchaV2CheckBoxProviderProps\n  extends GoogleReCaptchaDefaultProviderProps {\n  type: Extract<GoogleReCaptcha.Type, 'v2-checkbox'>;\n  explicit?: Explicit & {\n    container: ContainerId | HTMLElement;\n    action?: GoogleReCaptcha.Action['action'];\n    theme?: GoogleReCaptcha.Theme;\n    size?: GoogleReCaptcha.Size['v2-checkbox'];\n  };\n}\nexport interface GoogleReCaptchaV3ProviderProps extends GoogleReCaptchaDefaultProviderProps {\n  type: Extract<GoogleReCaptcha.Type, 'v3'>;\n  explicit?: Explicit & {\n    badge?: GoogleReCaptcha.Badge;\n  };\n}\n\nexport type GoogleReCaptchaProviderProps =\n  | GoogleReCaptchaV3ProviderProps\n  | GoogleReCaptchaV2InvisibleProviderProps\n  | GoogleReCaptchaV2CheckBoxProviderProps;\n\nconst onLoadCallbackName = 'onGoogleReCaptchaLoad';\nconst containerId = 'google-recaptcha-container';\n\nexport const GoogleReCaptchaProvider: React.FC<GoogleReCaptchaProviderProps> = ({\n  type,\n  siteKey,\n  language,\n  scriptProps,\n  isEnterprise = false,\n  host,\n  children,\n  explicit,\n  onLoad,\n  onError\n}) => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [googleReCaptchaInstance, setGoogleReCaptchaInstance] =\n    React.useState<GoogleReCaptcha.Instance>();\n\n  React.useEffect(() => {\n    if (!siteKey) {\n      throw new Error('Google ReCaptcha site key not provided');\n    }\n\n    const scriptId = scriptProps?.id ?? 'google-recaptcha-script';\n    const isGoogleReCaptchaInjected = checkGoogleReCaptchaInjected(scriptId);\n\n    const onload = () => {\n      const googleReCaptcha: GoogleReCaptcha.Instance = isEnterprise\n        ? (window as any).grecaptcha?.enterprise\n        : (window as any).grecaptcha;\n\n      if (!googleReCaptcha) {\n        if (onError) onError();\n        return;\n      }\n\n      if (!explicit) {\n        googleReCaptcha.ready(async () => {\n          setGoogleReCaptchaInstance(googleReCaptcha);\n          if (onLoad) await onLoad(googleReCaptcha);\n          setIsLoading(true);\n        });\n      }\n\n      if (explicit) {\n        const params = {\n          size: type === 'v3' || type === 'v2-invisible' ? 'invisible' : 'normal',\n          ...((type === 'v3' || type === 'v2-invisible') && ({ badge: 'bottomright' } as const)),\n          sitekey: siteKey,\n          ...explicit\n        } as const;\n\n        if (!isGoogleReCaptchaInjected) {\n          const isV3AndV2OptWidgetHidden =\n            (type === 'v3' || type === 'v2-invisible') && explicit?.badge === 'hidden';\n\n          if (isV3AndV2OptWidgetHidden) {\n            hideGoogleReCaptchaBadge();\n          }\n        }\n\n        googleReCaptcha.ready(async () => {\n          if (explicit.container) {\n            googleReCaptcha.render(explicit.container, params, !!explicit.inherit);\n          }\n\n          setGoogleReCaptchaInstance(googleReCaptcha);\n\n          if (onLoad) await onLoad(googleReCaptcha);\n          setIsLoading(true);\n        });\n      }\n    };\n    (window as unknown as { [key: string]: () => void })[onLoadCallbackName] = onload;\n\n    if (isGoogleReCaptchaInjected) {\n      onload();\n    } else {\n      injectGoogleReCaptchaScript({\n        isEnterprise,\n        host,\n        ...((type === 'v3' || type === 'v2-invisible') &&\n          explicit?.badge && {\n            badge: explicit?.badge === 'hidden' ? 'bottomright' : explicit?.badge\n          }),\n        ...(language && { hl: language }),\n        render:\n          ((type === 'v3' || type === 'v2-invisible') && explicit?.container) ||\n          type === 'v2-checkbox'\n            ? 'explicit'\n            : siteKey,\n        ...scriptProps,\n        onload,\n        id: scriptId\n      });\n    }\n\n    return () => {\n      googleReCaptchaInstance?.reset();\n      if (!isGoogleReCaptchaInjected) removeGoogleReCaptchaScript(scriptId);\n      if ((type === 'v3' || type === 'v2-invisible') && !explicit?.container && explicit?.badge) {\n        removeGoogleReCaptchaContainer(containerId);\n      } else {\n        removeGoogleReCaptchaBadge();\n      }\n    };\n  }, [isEnterprise, language, host]);\n\n  const executeV3 = React.useCallback(\n    (action: GoogleReCaptcha.Action['action']) => {\n      if (!googleReCaptchaInstance?.execute) {\n        throw new Error('Google ReCaptcha has not been loaded');\n      }\n\n      return googleReCaptchaInstance.execute(siteKey, { action });\n    },\n    [googleReCaptchaInstance]\n  );\n\n  const executeV2Invisible = React.useCallback(\n    (optWidgetId?: GoogleReCaptcha.OptWidgetId) => {\n      if (!googleReCaptchaInstance?.execute) {\n        throw new Error('Google ReCaptcha has not been loaded');\n      }\n\n      return googleReCaptchaInstance.execute(optWidgetId);\n    },\n    [googleReCaptchaInstance]\n  );\n\n  const value = React.useMemo(\n    () => ({\n      googleReCaptcha: googleReCaptchaInstance,\n      siteKey,\n      isLoading,\n      executeV2Invisible,\n      executeV3,\n      reset: googleReCaptchaInstance?.reset,\n      getResponse: googleReCaptchaInstance?.getResponse,\n      render: googleReCaptchaInstance?.render,\n      ...(language && { language })\n    }),\n    [siteKey, googleReCaptchaInstance, isLoading, language]\n  );\n\n  return <GoogleReCaptchaContextProvider value={value}>{children}</GoogleReCaptchaContextProvider>;\n};\n"],"names":["GoogleReCaptchaProvider","_ref","type","siteKey","language","scriptProps","_ref$isEnterprise","isEnterprise","host","children","explicit","onLoad","onError","_React$useState","React","useState","_React$useState2","_slicedToArray","isLoading","setIsLoading","_React$useState3","_React$useState4","googleReCaptchaInstance","setGoogleReCaptchaInstance","useEffect","_scriptProps$id","Error","scriptId","id","isGoogleReCaptchaInjected","checkGoogleReCaptchaInjected","onload","_grecaptcha","googleReCaptcha","window","grecaptcha","enterprise","ready","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","params","_objectSpread","size","badge","sitekey","hideGoogleReCaptchaBadge","_callee2","_context2","container","render","inherit","injectGoogleReCaptchaScript","hl","reset","removeGoogleReCaptchaScript","removeGoogleReCaptchaBadge","removeGoogleReCaptchaContainer","executeV3","useCallback","action","execute","executeV2Invisible","optWidgetId","value","useMemo","getResponse","createElement","GoogleReCaptchaContextProvider"],"mappings":"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"}